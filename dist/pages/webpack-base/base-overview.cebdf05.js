webpackJsonp([4,8],{26:function(n,e,s){var r,t,o={};s(27),r=s(29),t=s(30),n.exports=r||{},n.exports.__esModule&&(n.exports=n.exports.default);var a="function"==typeof n.exports?n.exports.options||(n.exports.options={}):n.exports;t&&(a.template=t),a.computed||(a.computed={}),Object.keys(o).forEach(function(n){var e=o[n];a.computed[n]=function(){return e}})},27:function(n,e,s){var r=s(28);"string"==typeof r&&(r=[[n.id,r,""]]);s(9)(r,{});r.locals&&(n.exports=r.locals)},28:function(n,e,s){e=n.exports=s(8)(),e.push([n.id,"",""])},29:function(n,e){"use strict";var s={};n.exports={data:function(){return s}}},30:function(n,e){n.exports=' <div id=base-overview> <h1>基本配置</h1> <hr> <h2>package.json</h2> <div class=eg-code> <pre>\n            <code>\n{\n  "name": "demo",\n  "version": "0.0.1",\n  "description": "webpack",\n  "repository": {\n    "type": "git",\n    "url": "git"\n  },\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1",\n    // 开发时 npm 命令\n    "dev": "node build/webpack.dev.js",\n\n    // 编译时 npm 命令\n    "build": "node build/webpack.build.js"\n  },\n  "author": "demo",\n  "license": "MIT",\n  "dependencies": {\n    "vue": "^1.0.26",\n    "vue-router": "^0.7.13"\n  },\n  "devDependencies": {\n    // css 加前缀\n    "autoprefixer": "^6.5.1",\n\n    // 编译 es6 到 es5\n    "babel-core": "^6.8.0",\n    "babel-loader": "^6.2.4",\n    "babel-plugin-transform-runtime": "^6.8.0",\n    "babel-preset-es2015": "^6.6.0",\n    "babel-runtime": "^6.0.0",\n    \n    // 清理文件\n    "clean-webpack-plugin": "^0.1.14",\n\n    // 处理 css\n    "css-loader": "^0.25.0",\n\n    // 提取文件\n    "extract-text-webpack-plugin": "^1.0.1",\n\n    // 处理文件\n    "file-loader": "^0.9.0",\n\n    // 将打包文件引入 html\n    "html-webpack-plugin": "^2.24.1",\n\n    // 压缩图片\n    "image-webpack-loader": "^3.0.0",\n\n    // 获取 ip\n    "ip": "^1.1.4",\n\n    // 监听端口\n    "net": "^1.0.2",\n\n    // sass\n    "node-sass": "^3.10.1",\n\n    // 打开浏览器\n    "open": "0.0.5",\n\n    // postcss\n    "postcss-loader": "^1.1.1",\n\n    // 终端生成二维码\n    "qrcode-terminal": "^0.11.0",\n\n    // 处理 sass\n    "sass-loader": "^4.0.2",\n\n    // 处理 css\n    "style-loader": "^0.13.1",\n\n    // 处理 url\n    "url-loader": "^0.5.7",\n\n    // vue 热加载\n    "vue-hot-reload-api": "^1.3.3",\n\n    // 处理 html\n    "vue-html-loader": "^1.0.0",\n\n    // 处理 .vue 文件\n    "vue-loader": "^8.5.4",\n\n    // 处理 css\n    "vue-style-loader": "^1.0.0",\n\n    // webpack\n    "webpack": "^1.13.3",\n\n    // webpack 开发服务\n    "webpack-dev-server": "^1.16.2"\n  }\n}\n            </code>\n        </pre> </div> <h2>webpack.base.js</h2> <div class=eg-code> <pre>\n            <code>\n// 引入 npm 包\nvar path = require(\'path\');\nvar webpack = require(\'webpack\');\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\nvar autoprefixer = require(\'autoprefixer\');\n\n// postcss 配置 autoprefixer\n// autoprefixer 浏览器兼容参数可放在 browserslist 文件中\n// browserslist 和 package.json 同级，postcss 会自动扫描\n// browserslist 文件内容   e.g.\n        #浏览器兼容列表\n        Android 4.1\n        iOS 7.1\n        Chrome > 31\n        ff > 31\n        ie >= 10\n\nvar getpostcss = function() {\n    var postcss = [\n        autoprefixer()\n    ];\n    return postcss;\n};\n\nmodule.exports = {\n    //入口文件\n    entry: {\n        // 配置打包后的文件为 app.js，默认为 bundle.js\n        app: [path.resolve(__dirname, \'../src/app\')]\n    },\n\n    output: {\n        // 打包后文件路径\n        path: path.resolve(__dirname, \'../dist\'),\n        // 引入的文件路径，e.g. link | src = http://cdn.com\n        publicPath: \'\',\n        // 打包后的文件名，对应 entry  e.g. app.1234567.js\n        filename: \'[name].[hash:7].js\',\n        // app 以外的文件名    e.g. vue 按需加载后打包的文件\n        chunkFilename: \'[name].[chunkhash:7].js\'\n    },\n\n    resolve: {\n        // require时省略的扩展名，如：require(\'module\') 不需要 module.js\n        extensions: [\'\', \'.js\', \'.vue\', \'.scss\'],\n        // 别名，可以直接使用别名来代表设定的路径以及其他\n        // 默认 require 的不是 .min文件\n        alias: {\n            // \'jquery\': \'jquery/dist/jquery.min\',\n            \'vue\': \'vue/dist/vue.min.js\',\n            \'vue-router\': \'vue-router/dist/vue-router.min.js\'\n        }\n    },\n\n    // 引用的外部文件不打包\n    // externals 对象的 key 是给 require 时用的，e.g. require(\'react\')，对象的value表示的是如何在 global（即window）中访问到该对象 \n    externals: {\n        // \'jquery\': \'jquery\'\n    },\n\n    module: {\n        // loader 执行顺序从右往左，先执行的放最右边\n        // vue-loader 可简写为 vue，-loader 可省略\n        // 字符串写法时多个 loader 用 ! 连接     e.g. loader: \'style!css\'\n        // 数组写法时 loader 改为 loaders      e.g. loaders: [\'style\', \'css\']\n        // 单个 loader 参数可用内联写法，或用 query 配置\n        loaders: [{\n            test: /\\.vue$/,\n            // 处理.vue\n            loader: \'vue\'\n        }, {\n            test: /\\.js$/,\n            // 处理 es6\n            loader: \'babel\',\n            // 排除不需要处理的文件夹\n            exclude: /node_modules/\n        }, {\n            test: /\\.html$/,\n            // 处理 html\n            loader: \'vue-html\'\n        }, {\n            test: /\\.css$/,\n            // 处理 css，配置 postcss 加前缀\n            loader: \'style!css!postcss\'\n        }, {\n            test: /\\.scss$/,\n            // 处理 sass，配置 postcss 加前缀\n            loader: \'style!css!postcss!sass\'\n        }, {\n            test: /\\.(png|gif|jpe?g)(\\?.*)?$/,\n            // 处理图片，小于 8192k 的文件用 base64，处理后的文件打包到 dist/images/\n            // 压缩图片\n            loaders: [\n                \'url?limit=8192&name=images/[name].[hash:7].[ext]\',\n                \'image-webpack\'\n            ]\n        }, {\n            test: /\\.(woff2?|eot|ttf|otf|svg)(\\?.*)?$/,\n            // 处理字体\n            loader: \'url\',\n            query: {\n                limit: 8192,\n                name: \'fonts/[name].[hash:7].[ext]\'\n            }\n        }]\n    },\n\n    // 压缩图片\n    imageWebpackLoader: {\n        mozjpeg: {\n            progressive: true,\n            quality: 65\n        },\n        pngquant: {\n            quality: "65-90",\n            speed: 4\n        },\n        gifsicle: {\n            interlaced: true,\n            colors: 64,\n            optimizationLevel: 3\n        }\n    },\n\n    // .vue 文件另加配置\n    vue: {\n        loaders: {\n            // 处理 scss，禁用 css-loader 默认的 autoprefixer，build 时 uglify 会覆盖掉自定义的 autoprefixer 浏览器兼容参数\n            scss: \'style!css?-autoprefixer!sass\'\n        },\n        // .vue 调用 postcss 配置\n        postcss: getpostcss()\n    },\n\n    // 其他 .css | .sass 文件调用 postcss 配置\n    postcss: getpostcss(),\n\n    plugins: [\n        // 全局引用 不需要 require\n        // e.g.\n        // var $ = require(\'jquery\') => $.extend();\n        // var Vue = require(\'vue\') => Vue.use(VueRouter);\n        new webpack.ProvidePlugin({\n            // $: \'jquery\',\n            Vue: \'vue\',\n            VueRouter: \'vue-router\'\n        }),\n\n        //生成入口文件并引入js, css等文件\n        new HtmlWebpackPlugin({\n            // 配置 index.html title\n            title: \'demo\',\n            // 配置文件名\n            filename: \'index.html\',\n            // 配置文件模板\n            template: path.resolve(__dirname, \'../index.html\'),\n            // 配置favicon\n            favicon: path.resolve(__dirname, \'../src/images/favicon.ico\'),\n            // 按依赖顺序引入\n            chunksSortMode: \'dependency\',\n            // 压缩选项\n            minify: {\n                // 去掉注释\n                removeComments: true,\n                // 去掉空格\n                collapseWhitespace: true,\n                // 去掉引号\n                removeAttributeQuotes: true\n            }\n        })\n    ]\n};\n            </code>\n        </pre> </div> </div> '}});